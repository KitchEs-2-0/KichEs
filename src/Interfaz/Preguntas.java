
package Interfaz;

import Consultas.ConsultasSQL;
import Controlador.ConexionBADA;
import Interfaz.Usuario.InicioUsuario;
import Modelo.Cjuego;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import java.applet.AudioClip;
import java.sql.PreparedStatement;
import java.util.HashMap; 
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Usuario
 */

public class Preguntas extends JFrame{
   
   ConexionBADA conecta=new ConexionBADA();
   
   ImageIcon imagen1[]=new ImageIcon[11];
   
//   int contador;

 FondoPanel fondo=new FondoPanel();

    public Preguntas() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        btnsiguinete.setEnabled(false);
        this.setTitle("YUPAYKUNA--LOS NÃšMEROS");
        for (int i = 1; i <11; i++) {
            imagen1[i]=new ImageIcon(getClass().getResource("/ImagenesJuegoN1/Numero"+i+".png")); 
        }
            lblImagenSalida.setIcon(imagen1[1]);
       
    }
    
    public void habilitarboton(){
        if (lblp1.getText()!=" ") {
            btnsiguinete.setEnabled(true);
            btnIniciar.setEnabled(false);
        }
    
    }
    
    
    class FondoPanel extends JPanel{
        private Image imagen;
        
        public void paint(Graphics g){
            imagen=new ImageIcon(getClass().getResource("/Recursos/ImagenJuegos.jpeg")).getImage();
            
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            
            super.paint(g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void usuariosalir(){
        InicioUsuario inicio=new InicioUsuario();
       inicio.setVisible(true);
       this.dispose();
        String usu=lblusuario.getText();
        inicio.lblUsuarioJ.setText(usu);
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new FondoPanel();
        lblPreguntas = new javax.swing.JLabel();
        btnsiguinete = new javax.swing.JButton();
        radio2 = new javax.swing.JRadioButton();
        radio1 = new javax.swing.JRadioButton();
        radio3 = new javax.swing.JRadioButton();
        btnIniciar = new javax.swing.JButton();
        lblImagenSalida = new javax.swing.JLabel();
        lblp2 = new javax.swing.JLabel();
        lblp3 = new javax.swing.JLabel();
        lblusuario = new javax.swing.JLabel();
        lblcorrecto = new javax.swing.JLabel();
        lblincorrecto = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        signo1 = new javax.swing.JButton();
        signo2 = new javax.swing.JButton();
        lblp1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 513));

        lblPreguntas.setBackground(new java.awt.Color(0, 0, 0));
        lblPreguntas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPreguntas.setText("Pregunta");

        btnsiguinete.setText("Siguiente");
        btnsiguinete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsiguineteMouseClicked(evt);
            }
        });
        btnsiguinete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsiguineteActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio2);
        radio2.setText("Palabra2");

        buttonGroup1.add(radio1);
        radio1.setText("Palabra1");
        radio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio3);
        radio3.setText("Palabra3");

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        lblp2.setForeground(new java.awt.Color(255, 255, 255));

        lblp3.setForeground(new java.awt.Color(255, 255, 255));

        lblusuario.setText("jLabel1");

        lblcorrecto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblcorrecto.setText("0");

        lblincorrecto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblincorrecto.setText("0");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Correctas");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Incorrectas");

        signo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/q1.png"))); // NOI18N

        signo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/q2.png"))); // NOI18N

        lblp1.setForeground(new java.awt.Color(255, 255, 255));
        lblp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblp1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblcorrecto)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblincorrecto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 361, Short.MAX_VALUE)
                        .addComponent(lblusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(666, 666, 666)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblp3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblp1)
                                .addComponent(lblp2))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(lblImagenSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radio3)
                                    .addComponent(radio1)
                                    .addComponent(radio2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(btnsiguinete, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(signo1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPreguntas, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(signo2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblincorrecto)
                        .addComponent(lblcorrecto)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(lblusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblp1))
                .addGap(46, 46, 46)
                .addComponent(lblp2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblp3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPreguntas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signo1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signo2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(radio1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radio2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radio3)
                        .addGap(100, 100, 100)
                        .addComponent(btnsiguinete, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImagenSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsiguineteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsiguineteActionPerformed
        validaRadios();
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btnsiguineteActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        siguiente();
        habilitarboton();
        
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void radio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio1ActionPerformed

    }//GEN-LAST:event_radio1ActionPerformed

    private void btnsiguineteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsiguineteMouseClicked
  
    }//GEN-LAST:event_btnsiguineteMouseClicked

    private void lblp1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblp1KeyReleased
//        habilitarboton();
    }//GEN-LAST:event_lblp1KeyReleased
              
//    public  AudioClip audio(int a){
//        AudioClip audio;
//        audio=java.applet.Applet.newAudioClip(getClass().getResource("/AudiosJuego/"+a+".m4a")) ;
//        audio.play();
//        return audio;
//    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preguntas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnsiguinete;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JLabel lblImagenSalida;
    public javax.swing.JLabel lblPreguntas;
    private javax.swing.JLabel lblcorrecto;
    private javax.swing.JLabel lblincorrecto;
    private javax.swing.JLabel lblp1;
    private javax.swing.JLabel lblp2;
    private javax.swing.JLabel lblp3;
    public javax.swing.JLabel lblusuario;
    public static javax.swing.JRadioButton radio1;
    public static javax.swing.JRadioButton radio2;
    public static javax.swing.JRadioButton radio3;
    private javax.swing.JButton signo1;
    private javax.swing.JButton signo2;
    // End of variables declaration//GEN-END:variables

    
    public void siguiente(){
        Random rd=new Random();
        int numero;
        numero=(rd.nextInt(10)+1); 
        
        
        String sql="SELECT preguntas.pregunta, preguntas.Respuesta,imagen.imagen FROM preguntas, imagen WHERE preguntas.codPregunta LIKE '"+numero+"';";
        ResultSet rs;
        ImageIcon foto= conecta.getFoto(Integer.valueOf(numero));
        InputStream is=null;
        ImageIcon ii=null ;
        ConsultasSQL consulta=new ConsultasSQL(conecta.getCon(), sql);
        if(consulta.getError()==null){
                rs=consulta.getResultado();
                try {
                    rs.next();
                    String pregunta = rs.getString("pregunta");
                    lblPreguntas.setText(pregunta);
                    String respuesta=rs.getString("Respuesta");
                    lblp1.setText(respuesta);
                    if(foto!=null){
                        lblImagenSalida.setIcon(foto);
                    }else{
                        lblImagenSalida.setIcon(null);
                    }
                    lblImagenSalida.updateUI();
                    
                    
                    
                  int n=0,num=0;
                while (n==num) { 
                    Random r=new Random();
                    num=(r.nextInt(40)+1); 
        
                    Random a=new Random();
                    n=(a.nextInt(40)+1); 

                    }
                    
                    ramdonPreguntas(num,n);
                    
                } catch (SQLException ex) {
                    ex.getMessage();
                }
            }
            audio(numero);
            RandomPregunta();
        lblImagenSalida.setIcon(imagen1[numero]);
        click();
    }
    
    public void ramdonPreguntas(int num1, int num2){
        Map<Integer, String> treeMap = new TreeMap<Integer, String>();
            treeMap.put(1, "PICHKA CHUNKA");        treeMap.put(21, "ALLPA");
            treeMap.put(2, "PATSAK");               treeMap.put(22, "ALLI");
            treeMap.put(3, "HUNU");                 treeMap.put(23, "KAY");
            treeMap.put(4, "SUKTA PATSAK");         treeMap.put(24, "KIKIN");
            treeMap.put(5, "WARANKA");              treeMap.put(25, "MUNANA");
            treeMap.put(6,"CHUSKU PATSAK");         treeMap.put(26, "PANI");
            treeMap.put(12, "SUKTA CHUNKA");        treeMap.put(27, "YAKU");
            treeMap.put(13, "CHUNKA PUSAK");        treeMap.put(28, "NINA");
            treeMap.put(14, "ISHKAY CHUNKA");       treeMap.put(29, "TUTA");
            treeMap.put(15, "PUSAK CHUNKA");        treeMap.put(30, "PUNCHA"); 
            treeMap.put(16, "CHUNKA SHUK");         treeMap.put(31, "SISA");
            treeMap.put(17,"KIMSA PATSAK");         treeMap.put(32, "CHASKA");
            treeMap.put(7, "CHUSKU CHUNKA");        treeMap.put(33, "RINRI");
            treeMap.put(8, "CHUNKA PUSAK");         treeMap.put(34, "CHAQUI");
            treeMap.put(9, "PUSAK PATSAK");         treeMap.put(35, "SHIWI");
            treeMap.put(10, "CHUNKA SHUK");         treeMap.put(36, "TIKRANA");
            treeMap.put(11, "TAWA CHUNKA");         treeMap.put(37, "TAKARINA");
            treeMap.put(18, "CHUNKA PISQAYOP");     treeMap.put(38, "SIMI");
            treeMap.put(19, "QANCHIS CHUNKA");      treeMap.put(39, "SUMAK");
            treeMap.put(20, "PUSAQ CHUNKA");        treeMap.put(40, "UKU");
                    
                    Iterator<Integer> it = treeMap.keySet().iterator();
                    while(it.hasNext()){
                    Integer key = it.next();
                    if (key==num1) {
                        lblp2.setText(treeMap.get(key));
                    }
                    if (key==num2) {
                         lblp3.setText(treeMap.get(key));
                         
                    }
                    
            }
    }            
    
    private void validaRadios() {
         String cad="";
            String a=lblp1.getText();
            if (radio1.isSelected()) {
             cad+=radio1.getText();
            }
            if (radio2.isSelected()) {
             cad+=radio2.getText();
            }
            if (radio3.isSelected()) {
             cad+=radio3.getText();
            }
            
            
   
            
            System.out.println(a);
            System.out.println(cad);
            
            
            if (a.equals(cad)){ 
               
                System.out.println("correcto");
                int correct=Integer.parseInt(lblcorrecto.getText());
                int cont=correct+1;
                lblcorrecto.setText(String.valueOf(cont));
                
            }else{
                System.out.println("Incorrecto");
                int incorrect=Integer.parseInt(lblincorrecto.getText());
                int cont1=incorrect+1;
                lblincorrecto.setText(String.valueOf(cont1));

        }
         
        siguiente();
    }

    public void RandomPregunta(){
        Map<Integer, String> treeMap = new TreeMap<Integer, String>();
            treeMap.put(1, lblp1.getText());        
            treeMap.put(2, lblp2.getText());  
            treeMap.put(3, lblp3.getText());
           

        int n=0, nu=0,num=0;
        while (n==nu || n==num || nu==num) { 
            
            Random s=new Random();
            n=(s.nextInt(3)+1);
          
            Random t=new Random();
            nu=(s.nextInt(3)+1);
         
            Random u=new Random();
            num=(u.nextInt(3)+1);
        }
      

        Iterator<Integer> it = treeMap.keySet().iterator();
            while(it.hasNext()){
                Integer key = it.next();
             if (n==key) {
                radio1.setText(treeMap.get(key));
            }
            if (nu==key) {
                radio2.setText(treeMap.get(key));
            }
            if (num==key) {
                radio3.setText(treeMap.get(key));
            }
      
                       
        } 
        
        
    }
    
    public void click(){
        int correcto=Integer.parseInt(lblcorrecto.getText());
        int incorrecto=Integer.parseInt(lblincorrecto.getText());
        int sum=correcto+incorrecto;
        if(sum==10){
            enviarEstadistica();
            JOptionPane.showMessageDialog(null, "Test terminado");
            this.dispose();
            JOptionPane.showMessageDialog(null, "Datos de juego guardado");
        }
    }
    
   public void enviarEstadistica(){
       try {
           int p=Integer.parseInt(lblcorrecto.getText());
           int porcent=(p*100)/10;
           Cjuego j=new Cjuego();
           j.setCodPreguntasC("1");
           j.setDificultadC("baja");
           j.setCodUsuarioC(lblusuario.getText());
           j.setPorcentaje(porcent);
           
           String sql="INSERT INTO juego(codPreguntas,usuarioJ,estadistica) VALUES (?,?,?)";
           PreparedStatement ps=conecta.getCon().prepareStatement(sql);
           ps.setString(1,j.getCodPreguntasC());
           ps.setString(2,j.getCodUsuarioC());
           ps.setInt(3,j.getPorcentaje());
           ps.executeUpdate();
       } catch (SQLException ex) {
           Logger.getLogger(Preguntas.class.getName()).log(Level.SEVERE, null, ex);
       }
   } 
    
   public void audio(int numero){
       AudioClip audio;
        audio=java.applet.Applet.newAudioClip(getClass().getResource("/AudiosJuego/"+numero+".wav")) ;
        audio.play();
   }
   
}
